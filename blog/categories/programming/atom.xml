<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Simon's Blog]]></title>
  <link href="http://simonhdickson.github.io/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://simonhdickson.github.io/"/>
  <updated>2013-11-24T22:48:53+00:00</updated>
  <id>http://simonhdickson.github.io/</id>
  <author>
    <name><![CDATA[Simon Dickson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tabs vs Spaces]]></title>
    <link href="http://simonhdickson.github.io/blog/2013/11/24/tabs-vs-spaces/"/>
    <updated>2013-11-24T22:05:00+00:00</updated>
    <id>http://simonhdickson.github.io/blog/2013/11/24/tabs-vs-spaces</id>
    <content type="html"><![CDATA[<h3>Spaces, the final frontier</h3>

<p>Tabs vs Spaces: the greatest of all the holy wars. Well it turns out that in F# there is no need for that debate: because in F# tabs are treated as an error by the compiler.</p>

<p>``` fsharp Tabs treated as error
let spaceFun x =</p>

<pre><code>x // ok
</code></pre>

<p>let tabFun x =</p>

<pre><code>x // error!
</code></pre>

<p>```</p>

<p>Now if only there was an option for the F# compiler to treat nulls as errors too&hellip;</p>
]]></content>
  </entry>
  
</feed>
